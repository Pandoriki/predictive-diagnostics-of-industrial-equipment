version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.backend 
    ports:
      - "8080:8000"             
    networks:
      - pdm-network
    environment:
      ML_SERVICE_URL: "http://ml-service:8000"   
      DATA_SERVICE_URL: "http://data-service:8000" 
      PYTHONPATH: "/app"         
    volumes:                    
      - ./backend:/app/backend 
      - ./configs:/app/configs   
      - ./src:/app/src           
      - ./models:/app/models     
      - ./backend/requirements.txt:/app/requirements.txt 
    restart: unless-stopped      

  ml-service:
    build:
      context: .
      dockerfile: ml-service/Dockerfile.ml
    networks:
      - pdm-network
    environment:
      MODELS_DIR: "/app/models"
      PYTHONPATH: "/app"       
    volumes:                    
      - ./models:/app/models    
      - ./configs:/app/configs  
      - ./src:/app/src         
      - ./data:/app/data         # Data-service загружает data/, но ml-service тоже нужен, чтобы получить сырые данные для PredictRequest, который будет в go-backend. 
                                 # Либо: backend/app.main сам загрузит, и не надо будет для ml-service
    restart: unless-stopped

  data-service:
    build:
      context: .
      dockerfile: data-service/Dockerfile.data
    networks:
      - pdm-network
    environment:
      PYTHONPATH: "/app"        
    volumes:                   
      - ./data:/app/data        
      - ./configs:/app/configs 
      - ./src:/app/src           
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.frontend
    networks:
      - pdm-network
    depends_on:
      - backend
    environment:
      VITE_API_URL: "/api" 
      VITE_USE_MOCKS: "false" 
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    networks:
      - pdm-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

networks:
  pdm-network:
    driver: bridge